import asyncio
from telegram.ext import (
    ApplicationBuilder, CommandHandler, MessageHandler,
    filters, CallbackQueryHandler, ContextTypes
)
from handle_photo import *
from database import init_all_db
from src.button_handler import *
from src.input_handler import text_input_handler, image_input_handler
from src.utils import is_user_authorized
from config import token





async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.message.from_user.id  # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    context.user_data.clear()
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if not context.user_data.get('authorized'):
        if is_user_authorized(user_id):
            context.user_data['authorized'] = True  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        else:
            await update.message.reply_text("–≠—Ç–æ—Ç –±–æ—Ç –Ω–µ –¥–ª—è —à–∏—Ä–æ–∫–æ–≥–æ –∫—Ä—É–≥–∞ –ª–∏—Ü. –î–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º @episcop_py")
            return  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.")

async def help(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.message.from_user.id  # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if not context.user_data.get('authorized'):
        if is_user_authorized(user_id):
            context.user_data['authorized'] = True  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        else:
            await update.message.reply_text("–≠—Ç–æ—Ç –±–æ—Ç –Ω–µ –¥–ª—è —à–∏—Ä–æ–∫–æ–≥–æ –∫—Ä—É–≥–∞ –ª–∏—Ü. –î–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º @episcop_py")
            return  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω

    # –¢–µ–∫—Å—Ç –ø–æ–º–æ—â–∏
    help_text = (
        "üë§ **–ü–æ–º–æ—â—å –ø–æ —Ä–∞–±–æ—Ç–µ —Å –±–æ—Ç–æ–º —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –ª–∏—Ü**\n\n"
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞! –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç—å –ª–∏—Ü–∞, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∏–µ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω—ã–π –∏–Ω—Ç–µ—Ä–µ—Å, –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è—Ö.\n\n"
        "üîç **–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–æ—Ç:**\n"
        "1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –ª–∏—Ü–æ–º, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å.\n"
        "2. –ë–æ—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç –Ω–∞–ª–∏—á–∏–µ —ç—Ç–æ–≥–æ –ª–∏—Ü–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.\n"
        "3. –ï—Å–ª–∏ –ª–∏—Ü–æ –Ω–∞–π–¥–µ–Ω–æ, –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º. –ï—Å–ª–∏ –Ω–µ—Ç ‚Äî —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–æ–±–∞–≤–∏—Ç—å –ª–∏—Ü–æ.\n\n"
        "üì• **–ö–∞–∫ –¥–æ–±–∞–≤–∏—Ç—å –ª–∏—Ü–æ:**\n"
        "1. –î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ª–∏—Ü–∞ —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –±–æ—Ç–∞.\n"
        "2. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –¥–æ–±–∞–≤–ª—è—è –ª–∏—Ü–æ, –≤—ã –ø–æ–ø–æ–ª–Ω—è–µ—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö. –¢–µ–º —Å–∞–º—ã–º –≤–æ–∑–º–æ–∂–Ω–æ –≤ –±—É–¥—É—â–µ–º –≤–∞–º —Å–∫–∞–∂—É—Ç —Å–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–æ—è–≤–ª–µ–Ω–Ω—É—é –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å —Å–µ–π—á–∞—Å.\n"
        "3. –ü—Ä–∏ –≤–≤–µ–¥–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –±—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã.\n"
        "4. –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ.\n\n"
        "‚ùì **–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**\n"
        "- `/start` ‚Äî –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º.\n"
        "- `/help` ‚Äî –ø–æ–ª—É—á–∏—Ç—å —ç—Ç—É –ø–æ–º–æ—â—å.\n\n"
        "–í –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è —ç—Ç–æ –≤–µ—Ä—Å–∏—è V1.1. –ë–æ—Ç –Ω–µ—Å–æ–≤–µ—Ä—à–µ–Ω–µ–Ω, –Ω–æ –æ–Ω –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –¥–æ—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –≤ —Å–≤–æ–±–æ–¥–Ω–æ–µ –æ—Ç –æ—Å–Ω–æ–≤–Ω–æ–π —Ä–∞–±–æ—Ç—ã –≤—Ä–µ–º—è.\n"
        "–ù–µ –∑–∞–±—É–¥—å –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π –Ω–∞ –±–æ—Ç —Å –∫–æ–ª–ª–µ–≥–∞–º–∏. –í–µ–¥—å —á–µ–º –±—ã—Å—Ç—Ä–µ–µ –º—ã –Ω–∞–ø–æ–ª–Ω–∏–º –±–∞–∑—É —Ç–µ–º –ª–µ–≥—á–µ –±—É–¥–µ—Ç –≤—Å–µ–º.\n"
        "–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –≤—ã —Å—Ç–æ–ª–∫–Ω—É–ª–∏—Å—å —Å –æ—à–∏–±–∫–∞–º–∏ –∫–æ–¥–∞, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å! –° —É–≤–∞–∂–µ–Ω–∏–µ–º, @episcop_py"

    )
    
    await update.message.reply_text(help_text, parse_mode='HTML')

#user_ids = set()

#async def send_weekly_message(context: ContextTypes.DEFAULT_TYPE):
#    while True:
#        for user_id in user_ids:
#            await context.bot.send_message(chat_id=user_id, text="–î–æ–±—Ä–æ–≥–æ –¥–Ω—è. –ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –ø–æ–ø–æ–ª–Ω—è—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –≤–µ–¥—å —ç—Ç–æ –≤–∞–∂–Ω–æ –≤ –Ω–∞—à–µ–π —Ä–∞–±–æ—Ç–µ.")
#      await asyncio.sleep(604800)  # –ñ–¥–µ–º 604800 —Å–µ–∫—É–Ω–¥ (1 –Ω–µ–¥–µ–ª—è)

#async def start_sending_messages(context: ContextTypes.DEFAULT_TYPE):
#    await send_weekly_message(context)

def main() -> None:
    init_all_db()
    application = ApplicationBuilder().token(token).build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help))
    application.add_handler(MessageHandler(filters.PHOTO, image_input_handler))
    application.add_handler(CallbackQueryHandler(button_click_handler, pattern='add_face'))
    application.add_handler(CallbackQueryHandler(cancel_input_handler, pattern='cancel_input'))
    application.add_handler(CallbackQueryHandler(additional_photo_handler, pattern='additional_photo_'))
    application.add_handler(CallbackQueryHandler(cancel_additional_photo_handler, pattern='no_additional_photo'))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, text_input_handler))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞—á—É –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    #application.add_handler(CommandHandler("start", lambda update, context: asyncio.create_task(start_sending_messages(context))))

    application.run_polling()

if __name__ == '__main__':
    main()


